<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Login Test"
           tests="6"
           failures="1"
           errors="0"
           skipped="0"
           time="4.042">
  <properties />
            <testcase name="bankManagerShouldDeleteCustomerSuccessfully" time="0.386" classname="com.bank.testsuite.BankTest">
                <failure type="org.openqa.selenium.support.ui.UnexpectedTagNameException"
                  message="Element should have been &quot;select&quot; but was &quot;input&quot;
Build info: version: &apos;3.141.59&apos;, revision: &apos;e82be7d358&apos;, time: &apos;2018-11-14T08:17:03&apos;
System info: host: &apos;DESKTOP-N48795B&apos;, ip: &apos;192.168.0.19&apos;, os.name: &apos;Windows 10&apos;, os.arch: &apos;amd64&apos;, os.version: &apos;10.0&apos;, java.version: &apos;1.8.0_121&apos;
Driver info: driver.version: unknown"
              >
<![CDATA[org.openqa.selenium.support.ui.UnexpectedTagNameException: Element should have been "select" but was "input"
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-N48795B', ip: '192.168.0.19', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_121'
Driver info: driver.version: unknown
  org.openqa.selenium.support.ui.Select.<init>(Select.java:48)
  com.bank.utility.Utility.selectByVisibleTextFromDropDown(Utility.java:117)
  com.bank.pages.CustomersPage.enterCustomerThatCreatedInCustomerPage(CustomersPage.java:16)
  com.bank.testsuite.BankTest.bankManagerShouldDeleteCustomerSuccessfully(BankTest.java:110)
  sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  java.lang.reflect.Method.invoke(Method.java:498)
  org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
  org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
  org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
  org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
  org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
  org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
  org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
  org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
  java.util.ArrayList.forEach(ArrayList.java:1249)
  org.testng.TestRunner.privateRun(TestRunner.java:766)
  org.testng.TestRunner.run(TestRunner.java:587)
  org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
  org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
  org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
  org.testng.SuiteRunner.run(SuiteRunner.java:286)
  org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
  org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
  org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
  org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
  org.testng.TestNG.runSuites(TestNG.java:1039)
  org.testng.TestNG.run(TestNG.java:1007)
  com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
  com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:110)
]]>
      </failure>

          </testcase>
  
  
            <testcase name="customerShouldDepositeMoneySuccessfully" time="0.548" classname="com.bank.testsuite.BankTest" />
                <testcase name="customerShouldWithdrawMoneySuccessfully" time="0.511" classname="com.bank.testsuite.BankTest" />
                <testcase name="customerShouldLoginAndLogoutSuccessfully" time="0.699" classname="com.bank.testsuite.BankTest" />
                <testcase name="bankManagerShouldOpenAccountSuccessfully" time="0.913" classname="com.bank.testsuite.BankTest" />
                <testcase name="bankManagerShouldAddCustomerSuccessfully" time="0.985" classname="com.bank.testsuite.BankTest" />
      
</testsuite>
